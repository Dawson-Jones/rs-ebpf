// SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
//
// THIS FILE IS AUTOGENERATED BY CARGO-LIBBPF-GEN!

pub use self::imp::*;

#[allow(dead_code)]
#[allow(non_snake_case)]
#[allow(non_camel_case_types)]
#[allow(clippy::transmute_ptr_to_ref)]
#[allow(clippy::upper_case_acronyms)]
#[warn(single_use_lifetimes)]
mod imp {
    use libbpf_rs::libbpf_sys;
    use libbpf_rs::skel::OpenSkel;
    use libbpf_rs::skel::Skel;
    use libbpf_rs::skel::SkelBuilder;

    fn build_skel_config(
    ) -> libbpf_rs::Result<libbpf_rs::__internal_skel::ObjectSkeletonConfig<'static>> {
        let mut builder = libbpf_rs::__internal_skel::ObjectSkeletonConfigBuilder::new(DATA);
        builder
            .name("vxlan_modify_bpf")
            .map("vxlan_mo.rodata", true)
            .prog("xdp_fwd_prog");

        builder.build()
    }

    #[derive(Default)]
    pub struct VxlanModifySkelBuilder {
        pub obj_builder: libbpf_rs::ObjectBuilder,
    }

    impl<'a> SkelBuilder<'a> for VxlanModifySkelBuilder {
        type Output = OpenVxlanModifySkel<'a>;
        fn open(mut self) -> libbpf_rs::Result<OpenVxlanModifySkel<'a>> {
            let mut skel_config = build_skel_config()?;
            let open_opts = self.obj_builder.opts(std::ptr::null());

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenVxlanModifySkel { obj, skel_config })
        }

        fn open_opts(
            self,
            open_opts: libbpf_sys::bpf_object_open_opts,
        ) -> libbpf_rs::Result<OpenVxlanModifySkel<'a>> {
            let mut skel_config = build_skel_config()?;

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenVxlanModifySkel { obj, skel_config })
        }

        fn object_builder(&self) -> &libbpf_rs::ObjectBuilder {
            &self.obj_builder
        }
        fn object_builder_mut(&mut self) -> &mut libbpf_rs::ObjectBuilder {
            &mut self.obj_builder
        }
    }

    pub struct OpenVxlanModifyMaps<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenVxlanModifyMaps<'_> {
        pub fn rodata(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("vxlan_mo.rodata").unwrap()
        }
    }

    pub struct OpenVxlanModifyMapsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenVxlanModifyMapsMut<'_> {
        pub fn rodata(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("vxlan_mo.rodata").unwrap()
        }
    }

    pub struct OpenVxlanModifyProgs<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenVxlanModifyProgs<'_> {
        pub fn xdp_fwd_prog(&self) -> &libbpf_rs::OpenProgram {
            self.inner.prog("xdp_fwd_prog").unwrap()
        }
    }

    pub struct OpenVxlanModifyProgsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenVxlanModifyProgsMut<'_> {
        pub fn xdp_fwd_prog(&mut self) -> &mut libbpf_rs::OpenProgram {
            self.inner.prog_mut("xdp_fwd_prog").unwrap()
        }
    }

    pub mod vxlan_modify_rodata_types {
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct rodata {
            pub target_addr: u32,
            pub current_addr: u32,
        }
    }

    pub struct OpenVxlanModifySkel<'a> {
        pub obj: libbpf_rs::OpenObject,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
    }

    impl<'a> OpenSkel for OpenVxlanModifySkel<'a> {
        type Output = VxlanModifySkel<'a>;
        fn load(mut self) -> libbpf_rs::Result<VxlanModifySkel<'a>> {
            let ret = unsafe { libbpf_sys::bpf_object__load_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::Object::from_ptr(self.obj.take_ptr())? };

            Ok(VxlanModifySkel {
                obj,
                skel_config: self.skel_config,
                links: VxlanModifyLinks::default(),
            })
        }

        fn open_object(&self) -> &libbpf_rs::OpenObject {
            &self.obj
        }

        fn open_object_mut(&mut self) -> &mut libbpf_rs::OpenObject {
            &mut self.obj
        }
    }
    impl OpenVxlanModifySkel<'_> {
        pub fn progs(&self) -> OpenVxlanModifyProgs<'_> {
            OpenVxlanModifyProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> OpenVxlanModifyProgsMut<'_> {
            OpenVxlanModifyProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> OpenVxlanModifyMaps<'_> {
            OpenVxlanModifyMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> OpenVxlanModifyMapsMut<'_> {
            OpenVxlanModifyMapsMut {
                inner: &mut self.obj,
            }
        }

        pub fn rodata(&mut self) -> &'_ mut vxlan_modify_rodata_types::rodata {
            unsafe {
                std::mem::transmute::<
                    *mut std::ffi::c_void,
                    &'_ mut vxlan_modify_rodata_types::rodata,
                >(self.skel_config.map_mmap_ptr(0).unwrap())
            }
        }
    }

    pub struct VxlanModifyMaps<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl VxlanModifyMaps<'_> {
        pub fn rodata(&self) -> &libbpf_rs::Map {
            self.inner.map("vxlan_mo.rodata").unwrap()
        }
    }

    pub struct VxlanModifyMapsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl VxlanModifyMapsMut<'_> {
        pub fn rodata(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("vxlan_mo.rodata").unwrap()
        }
    }

    pub struct VxlanModifyProgs<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl VxlanModifyProgs<'_> {
        pub fn xdp_fwd_prog(&self) -> &libbpf_rs::Program {
            self.inner.prog("xdp_fwd_prog").unwrap()
        }
    }

    pub struct VxlanModifyProgsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl VxlanModifyProgsMut<'_> {
        pub fn xdp_fwd_prog(&mut self) -> &mut libbpf_rs::Program {
            self.inner.prog_mut("xdp_fwd_prog").unwrap()
        }
    }

    #[derive(Default)]
    pub struct VxlanModifyLinks {
        pub xdp_fwd_prog: Option<libbpf_rs::Link>,
    }

    pub struct VxlanModifySkel<'a> {
        pub obj: libbpf_rs::Object,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
        pub links: VxlanModifyLinks,
    }

    unsafe impl Send for VxlanModifySkel<'_> {}
    unsafe impl Sync for VxlanModifySkel<'_> {}

    impl Skel for VxlanModifySkel<'_> {
        fn object(&self) -> &libbpf_rs::Object {
            &self.obj
        }

        fn object_mut(&mut self) -> &mut libbpf_rs::Object {
            &mut self.obj
        }

        fn attach(&mut self) -> libbpf_rs::Result<()> {
            let ret = unsafe { libbpf_sys::bpf_object__attach_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            self.links = VxlanModifyLinks {
                xdp_fwd_prog: (|| {
                    Ok(core::ptr::NonNull::new(self.skel_config.prog_link_ptr(0)?)
                        .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }))
                })()?,
            };

            Ok(())
        }
    }
    impl VxlanModifySkel<'_> {
        pub fn progs(&self) -> VxlanModifyProgs<'_> {
            VxlanModifyProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> VxlanModifyProgsMut<'_> {
            VxlanModifyProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> VxlanModifyMaps<'_> {
            VxlanModifyMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> VxlanModifyMapsMut<'_> {
            VxlanModifyMapsMut {
                inner: &mut self.obj,
            }
        }

        pub fn rodata(&mut self) -> &'_ vxlan_modify_rodata_types::rodata {
            unsafe {
                std::mem::transmute::<*mut std::ffi::c_void, &'_ vxlan_modify_rodata_types::rodata>(
                    self.skel_config.map_mmap_ptr(0).unwrap(),
                )
            }
        }
    }

    const DATA: &[u8] = &[
        127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 247, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
        0, 64, 0, 9, 0, 1, 0, 0, 46, 115, 116, 114, 116, 97, 98, 0, 46, 115, 121, 109, 116, 97, 98,
        0, 120, 100, 112, 0, 46, 114, 111, 100, 97, 116, 97, 0, 108, 105, 99, 101, 110, 115, 101,
        0, 118, 120, 108, 97, 110, 95, 109, 111, 100, 105, 102, 121, 46, 98, 112, 102, 46, 99, 0,
        76, 66, 66, 48, 95, 49, 55, 0, 76, 66, 66, 48, 95, 55, 0, 120, 100, 112, 95, 102, 119, 100,
        95, 112, 114, 111, 103, 46, 95, 95, 95, 95, 102, 109, 116, 0, 76, 66, 66, 48, 95, 57, 0,
        76, 66, 66, 48, 95, 49, 49, 0, 76, 66, 66, 48, 95, 49, 51, 0, 76, 66, 66, 48, 95, 49, 53,
        0, 120, 100, 112, 95, 102, 119, 100, 95, 112, 114, 111, 103, 0, 99, 117, 114, 114, 101,
        110, 116, 95, 97, 100, 100, 114, 0, 116, 97, 114, 103, 101, 116, 95, 97, 100, 100, 114, 0,
        95, 108, 105, 99, 101, 110, 115, 101, 0, 46, 114, 101, 108, 120, 100, 112, 0, 46, 66, 84,
        70, 0, 46, 66, 84, 70, 46, 101, 120, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 4, 0, 241, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0,
        0, 0, 0, 0, 3, 0, 152, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 3,
        0, 24, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 1, 0, 4, 0, 8, 0, 0, 0, 0,
        0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 3, 0, 16, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 3, 0, 56, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        107, 0, 0, 0, 0, 0, 3, 0, 96, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
        0, 3, 0, 120, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 4, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0, 18, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        168, 4, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 17, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0,
        0, 0, 0, 149, 0, 0, 0, 17, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 161, 0,
        0, 0, 17, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 191, 22, 0, 0, 0, 0, 0,
        0, 183, 7, 0, 0, 2, 0, 0, 0, 97, 97, 4, 0, 0, 0, 0, 0, 97, 104, 0, 0, 0, 0, 0, 0, 191, 130,
        0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 14, 0, 0, 0, 45, 18, 140, 0, 0, 0, 0, 0, 113, 130, 12, 0, 0,
        0, 0, 0, 113, 131, 13, 0, 0, 0, 0, 0, 103, 3, 0, 0, 8, 0, 0, 0, 79, 35, 0, 0, 0, 0, 0, 0,
        85, 3, 135, 0, 8, 0, 0, 0, 191, 130, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 34, 0, 0, 0, 45, 18,
        132, 0, 0, 0, 0, 0, 113, 130, 23, 0, 0, 0, 0, 0, 85, 2, 130, 0, 1, 0, 0, 0, 191, 130, 0, 0,
        0, 0, 0, 0, 7, 2, 0, 0, 14, 0, 0, 0, 113, 35, 0, 0, 0, 0, 0, 0, 103, 3, 0, 0, 2, 0, 0, 0,
        87, 3, 0, 0, 60, 0, 0, 0, 15, 50, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 8, 0, 0, 0, 45, 18, 122, 0,
        0, 0, 0, 0, 183, 1, 0, 0, 0, 0, 0, 0, 123, 26, 192, 255, 0, 0, 0, 0, 183, 7, 0, 0, 2, 0, 0,
        0, 115, 122, 192, 255, 0, 0, 0, 0, 123, 26, 248, 255, 0, 0, 0, 0, 123, 26, 240, 255, 0, 0,
        0, 0, 123, 26, 232, 255, 0, 0, 0, 0, 123, 26, 224, 255, 0, 0, 0, 0, 123, 26, 216, 255, 0,
        0, 0, 0, 123, 26, 208, 255, 0, 0, 0, 0, 123, 26, 200, 255, 0, 0, 0, 0, 113, 129, 23, 0, 0,
        0, 0, 0, 115, 26, 193, 255, 0, 0, 0, 0, 105, 129, 16, 0, 0, 0, 0, 0, 220, 1, 0, 0, 16, 0,
        0, 0, 107, 26, 198, 255, 0, 0, 0, 0, 113, 129, 15, 0, 0, 0, 0, 0, 115, 26, 204, 255, 0, 0,
        0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 17, 0, 0, 0, 0, 0, 0, 99, 26,
        208, 255, 0, 0, 0, 0, 24, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 145, 0, 0, 0, 0,
        0, 0, 99, 26, 224, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 192, 255, 255,
        255, 191, 97, 0, 0, 0, 0, 0, 0, 183, 3, 0, 0, 64, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 133,
        0, 0, 0, 69, 0, 0, 0, 191, 1, 0, 0, 0, 0, 0, 0, 103, 1, 0, 0, 32, 0, 0, 0, 119, 1, 0, 0,
        32, 0, 0, 0, 21, 1, 6, 0, 0, 0, 0, 0, 24, 1, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        2, 0, 0, 19, 0, 0, 0, 191, 3, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 5, 0, 80, 0, 0,
        0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 19, 0, 0, 0, 0, 0, 0, 99, 56,
        26, 0, 0, 0, 0, 0, 97, 146, 0, 0, 0, 0, 0, 0, 105, 132, 14, 0, 0, 0, 0, 0, 105, 129, 16, 0,
        0, 0, 0, 0, 15, 65, 0, 0, 0, 0, 0, 0, 105, 132, 18, 0, 0, 0, 0, 0, 15, 65, 0, 0, 0, 0, 0,
        0, 105, 132, 20, 0, 0, 0, 0, 0, 15, 65, 0, 0, 0, 0, 0, 0, 105, 132, 22, 0, 0, 0, 0, 0, 15,
        65, 0, 0, 0, 0, 0, 0, 191, 52, 0, 0, 0, 0, 0, 0, 87, 4, 0, 0, 255, 255, 0, 0, 15, 65, 0, 0,
        0, 0, 0, 0, 119, 3, 0, 0, 16, 0, 0, 0, 15, 49, 0, 0, 0, 0, 0, 0, 191, 35, 0, 0, 0, 0, 0, 0,
        87, 3, 0, 0, 255, 255, 0, 0, 15, 49, 0, 0, 0, 0, 0, 0, 99, 40, 30, 0, 0, 0, 0, 0, 119, 2,
        0, 0, 16, 0, 0, 0, 15, 33, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 0, 0, 1, 0, 45, 18, 4, 0, 0, 0,
        0, 0, 191, 19, 0, 0, 0, 0, 0, 0, 119, 3, 0, 0, 16, 0, 0, 0, 87, 1, 0, 0, 255, 255, 0, 0,
        15, 49, 0, 0, 0, 0, 0, 0, 45, 18, 4, 0, 0, 0, 0, 0, 191, 19, 0, 0, 0, 0, 0, 0, 119, 3, 0,
        0, 16, 0, 0, 0, 87, 1, 0, 0, 255, 255, 0, 0, 15, 49, 0, 0, 0, 0, 0, 0, 45, 18, 4, 0, 0, 0,
        0, 0, 191, 19, 0, 0, 0, 0, 0, 0, 119, 3, 0, 0, 16, 0, 0, 0, 87, 1, 0, 0, 255, 255, 0, 0,
        15, 49, 0, 0, 0, 0, 0, 0, 45, 18, 2, 0, 0, 0, 0, 0, 191, 18, 0, 0, 0, 0, 0, 0, 119, 2, 0,
        0, 16, 0, 0, 0, 15, 18, 0, 0, 0, 0, 0, 0, 167, 2, 0, 0, 255, 255, 255, 255, 107, 40, 24, 0,
        0, 0, 0, 0, 105, 161, 248, 255, 0, 0, 0, 0, 115, 24, 10, 0, 0, 0, 0, 0, 119, 1, 0, 0, 8, 0,
        0, 0, 115, 24, 11, 0, 0, 0, 0, 0, 97, 161, 244, 255, 0, 0, 0, 0, 191, 18, 0, 0, 0, 0, 0, 0,
        119, 2, 0, 0, 24, 0, 0, 0, 115, 40, 9, 0, 0, 0, 0, 0, 191, 18, 0, 0, 0, 0, 0, 0, 119, 2, 0,
        0, 16, 0, 0, 0, 115, 40, 8, 0, 0, 0, 0, 0, 115, 24, 6, 0, 0, 0, 0, 0, 119, 1, 0, 0, 8, 0,
        0, 0, 115, 24, 7, 0, 0, 0, 0, 0, 105, 161, 254, 255, 0, 0, 0, 0, 115, 24, 4, 0, 0, 0, 0, 0,
        119, 1, 0, 0, 8, 0, 0, 0, 115, 24, 5, 0, 0, 0, 0, 0, 105, 161, 252, 255, 0, 0, 0, 0, 115,
        24, 2, 0, 0, 0, 0, 0, 119, 1, 0, 0, 8, 0, 0, 0, 115, 24, 3, 0, 0, 0, 0, 0, 105, 161, 250,
        255, 0, 0, 0, 0, 115, 24, 0, 0, 0, 0, 0, 0, 119, 1, 0, 0, 8, 0, 0, 0, 115, 24, 1, 0, 0, 0,
        0, 0, 183, 7, 0, 0, 3, 0, 0, 0, 97, 98, 12, 0, 0, 0, 0, 0, 97, 161, 200, 255, 0, 0, 0, 0,
        29, 18, 3, 0, 0, 0, 0, 0, 183, 2, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 23, 0, 0, 0, 191, 7, 0,
        0, 0, 0, 0, 0, 191, 112, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 98, 112, 102, 95, 102, 105, 98, 95, 108, 111, 111, 107, 117, 112, 58, 32, 37, 100, 0,
        71, 80, 76, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 13, 0, 0, 0, 232, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, 0, 24, 2, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 159, 235, 1, 0, 24, 0, 0, 0, 0, 0, 0, 0, 180, 1, 0, 0,
        180, 1, 0, 0, 161, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 4, 24,
        0, 0, 0, 8, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 3, 0, 0, 0, 32, 0, 0, 0, 22, 0,
        0, 0, 3, 0, 0, 0, 64, 0, 0, 0, 32, 0, 0, 0, 3, 0, 0, 0, 96, 0, 0, 0, 48, 0, 0, 0, 3, 0, 0,
        0, 128, 0, 0, 0, 63, 0, 0, 0, 3, 0, 0, 0, 160, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 8, 4, 0, 0,
        0, 84, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 13, 6, 0, 0, 0,
        97, 0, 0, 0, 1, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 1, 105, 0, 0, 0,
        1, 0, 0, 12, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10,
        0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 8, 3, 0, 0, 0, 125, 0, 0, 0, 0, 0, 0, 14, 8, 0, 0, 0, 1, 0,
        0, 0, 137, 0, 0, 0, 0, 0, 0, 14, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 14, 0, 0,
        0, 150, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0,
        13, 0, 0, 0, 16, 0, 0, 0, 19, 0, 0, 0, 155, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0,
        175, 0, 0, 0, 0, 0, 0, 14, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 14,
        0, 0, 0, 16, 0, 0, 0, 4, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 14, 18, 0, 0, 0, 1, 0, 0, 0, 141,
        5, 0, 0, 3, 0, 0, 15, 27, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 12, 0, 0, 0, 4, 0,
        0, 0, 4, 0, 0, 0, 17, 0, 0, 0, 8, 0, 0, 0, 19, 0, 0, 0, 149, 5, 0, 0, 1, 0, 0, 15, 4, 0, 0,
        0, 19, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 120, 100, 112, 95, 109, 100, 0, 100, 97, 116,
        97, 0, 100, 97, 116, 97, 95, 101, 110, 100, 0, 100, 97, 116, 97, 95, 109, 101, 116, 97, 0,
        105, 110, 103, 114, 101, 115, 115, 95, 105, 102, 105, 110, 100, 101, 120, 0, 114, 120, 95,
        113, 117, 101, 117, 101, 95, 105, 110, 100, 101, 120, 0, 101, 103, 114, 101, 115, 115, 95,
        105, 102, 105, 110, 100, 101, 120, 0, 95, 95, 117, 51, 50, 0, 117, 110, 115, 105, 103, 110,
        101, 100, 32, 105, 110, 116, 0, 99, 116, 120, 0, 105, 110, 116, 0, 120, 100, 112, 95, 102,
        119, 100, 95, 112, 114, 111, 103, 0, 95, 95, 98, 101, 51, 50, 0, 116, 97, 114, 103, 101,
        116, 95, 97, 100, 100, 114, 0, 99, 117, 114, 114, 101, 110, 116, 95, 97, 100, 100, 114, 0,
        99, 104, 97, 114, 0, 95, 95, 65, 82, 82, 65, 89, 95, 83, 73, 90, 69, 95, 84, 89, 80, 69,
        95, 95, 0, 120, 100, 112, 95, 102, 119, 100, 95, 112, 114, 111, 103, 46, 95, 95, 95, 95,
        102, 109, 116, 0, 95, 108, 105, 99, 101, 110, 115, 101, 0, 47, 104, 111, 109, 101, 47, 118,
        97, 103, 114, 97, 110, 116, 47, 112, 114, 111, 106, 101, 99, 116, 47, 109, 121, 95, 112,
        114, 111, 106, 101, 99, 116, 47, 82, 117, 115, 116, 47, 109, 121, 45, 108, 105, 98, 98,
        112, 102, 45, 114, 115, 47, 120, 100, 112, 95, 102, 111, 114, 119, 97, 114, 100, 47, 115,
        114, 99, 47, 98, 112, 102, 47, 118, 120, 108, 97, 110, 95, 109, 111, 100, 105, 102, 121,
        46, 98, 112, 102, 46, 99, 0, 105, 110, 116, 32, 120, 100, 112, 95, 102, 119, 100, 95, 112,
        114, 111, 103, 40, 115, 116, 114, 117, 99, 116, 32, 120, 100, 112, 95, 109, 100, 32, 42,
        99, 116, 120, 41, 0, 32, 32, 32, 32, 118, 111, 105, 100, 32, 42, 100, 97, 116, 97, 95, 101,
        110, 100, 32, 61, 32, 40, 118, 111, 105, 100, 32, 42, 41, 40, 108, 111, 110, 103, 41, 32,
        99, 116, 120, 45, 62, 100, 97, 116, 97, 95, 101, 110, 100, 59, 0, 32, 32, 32, 32, 118, 111,
        105, 100, 32, 42, 100, 97, 116, 97, 32, 61, 32, 40, 118, 111, 105, 100, 32, 42, 41, 40,
        108, 111, 110, 103, 41, 32, 99, 116, 120, 45, 62, 100, 97, 116, 97, 59, 0, 32, 32, 32, 32,
        105, 102, 32, 40, 40, 118, 111, 105, 100, 32, 42, 41, 32, 40, 101, 116, 104, 32, 43, 32,
        49, 41, 32, 62, 32, 100, 97, 116, 97, 95, 101, 110, 100, 41, 32, 123, 0, 32, 32, 32, 32,
        105, 102, 32, 40, 101, 116, 104, 45, 62, 104, 95, 112, 114, 111, 116, 111, 32, 33, 61, 32,
        98, 112, 102, 95, 104, 116, 111, 110, 115, 40, 69, 84, 72, 95, 80, 95, 73, 80, 41, 41, 32,
        123, 0, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111, 105, 100, 32, 42, 41, 32, 40, 105,
        112, 104, 32, 43, 32, 49, 41, 32, 62, 32, 100, 97, 116, 97, 95, 101, 110, 100, 41, 32, 123,
        0, 32, 32, 32, 32, 105, 102, 32, 40, 105, 112, 104, 45, 62, 112, 114, 111, 116, 111, 99,
        111, 108, 32, 33, 61, 32, 73, 80, 80, 82, 79, 84, 79, 95, 73, 67, 77, 80, 41, 32, 123, 0,
        32, 32, 32, 32, 105, 99, 109, 112, 104, 32, 61, 32, 40, 118, 111, 105, 100, 32, 42, 41, 32,
        105, 112, 104, 32, 43, 32, 40, 105, 112, 104, 45, 62, 105, 104, 108, 32, 60, 60, 32, 50,
        41, 59, 0, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111, 105, 100, 32, 42, 41, 32, 40,
        105, 99, 109, 112, 104, 32, 43, 32, 49, 41, 32, 62, 32, 100, 97, 116, 97, 95, 101, 110,
        100, 41, 32, 123, 0, 32, 32, 32, 32, 115, 116, 114, 117, 99, 116, 32, 98, 112, 102, 95,
        102, 105, 98, 95, 108, 111, 111, 107, 117, 112, 32, 102, 105, 98, 95, 112, 97, 114, 97,
        109, 115, 32, 61, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46, 108, 52, 95, 112, 114,
        111, 116, 111, 99, 111, 108, 32, 61, 32, 105, 112, 104, 45, 62, 112, 114, 111, 116, 111,
        99, 111, 108, 44, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46, 116, 111, 116, 95, 108, 101, 110,
        32, 61, 32, 98, 112, 102, 95, 110, 116, 111, 104, 115, 40, 105, 112, 104, 45, 62, 116, 111,
        116, 95, 108, 101, 110, 41, 44, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46, 116, 111, 115, 32,
        61, 32, 105, 112, 104, 45, 62, 116, 111, 115, 44, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46,
        105, 112, 118, 52, 95, 115, 114, 99, 32, 61, 32, 99, 117, 114, 114, 101, 110, 116, 95, 97,
        100, 100, 114, 44, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46, 105, 112, 118, 52, 95, 100, 115,
        116, 32, 61, 32, 116, 97, 114, 103, 101, 116, 95, 97, 100, 100, 114, 44, 0, 32, 32, 32, 32,
        114, 99, 32, 61, 32, 98, 112, 102, 95, 102, 105, 98, 95, 108, 111, 111, 107, 117, 112, 40,
        99, 116, 120, 44, 32, 38, 102, 105, 98, 95, 112, 97, 114, 97, 109, 115, 44, 32, 115, 105,
        122, 101, 111, 102, 40, 102, 105, 98, 95, 112, 97, 114, 97, 109, 115, 41, 44, 32, 48, 41,
        59, 0, 32, 32, 32, 32, 105, 102, 32, 40, 114, 99, 32, 33, 61, 32, 66, 80, 70, 95, 70, 73,
        66, 95, 76, 75, 85, 80, 95, 82, 69, 84, 95, 83, 85, 67, 67, 69, 83, 83, 41, 32, 123, 0, 32,
        32, 32, 32, 32, 32, 32, 32, 98, 112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 98,
        112, 102, 95, 102, 105, 98, 95, 108, 111, 111, 107, 117, 112, 58, 32, 37, 100, 34, 44, 32,
        114, 99, 41, 59, 0, 32, 32, 32, 32, 105, 112, 104, 45, 62, 115, 97, 100, 100, 114, 32, 61,
        32, 99, 117, 114, 114, 101, 110, 116, 95, 97, 100, 100, 114, 59, 0, 32, 32, 32, 32, 105,
        112, 104, 45, 62, 100, 97, 100, 100, 114, 32, 61, 32, 116, 97, 114, 103, 101, 116, 95, 97,
        100, 100, 114, 59, 0, 9, 9, 99, 115, 117, 109, 32, 43, 61, 32, 42, 105, 112, 104, 49, 54,
        43, 43, 59, 0, 9, 9, 105, 102, 32, 40, 99, 115, 117, 109, 32, 62, 62, 32, 49, 54, 41, 0, 9,
        114, 101, 116, 117, 114, 110, 32, 126, 99, 115, 117, 109, 59, 0, 32, 32, 32, 32, 105, 112,
        104, 45, 62, 99, 104, 101, 99, 107, 32, 61, 32, 99, 115, 117, 109, 95, 102, 111, 108, 100,
        95, 104, 101, 108, 112, 101, 114, 40, 99, 115, 117, 109, 41, 59, 0, 32, 32, 32, 32, 109,
        101, 109, 99, 112, 121, 40, 101, 116, 104, 45, 62, 104, 95, 115, 111, 117, 114, 99, 101,
        44, 32, 102, 105, 98, 95, 112, 97, 114, 97, 109, 115, 46, 115, 109, 97, 99, 44, 32, 69, 84,
        72, 95, 65, 76, 69, 78, 41, 59, 0, 32, 32, 32, 32, 109, 101, 109, 99, 112, 121, 40, 101,
        116, 104, 45, 62, 104, 95, 100, 101, 115, 116, 44, 32, 102, 105, 98, 95, 112, 97, 114, 97,
        109, 115, 46, 100, 109, 97, 99, 44, 32, 69, 84, 72, 95, 65, 76, 69, 78, 41, 59, 0, 32, 32,
        32, 32, 105, 102, 32, 40, 99, 116, 120, 45, 62, 105, 110, 103, 114, 101, 115, 115, 95, 105,
        102, 105, 110, 100, 101, 120, 32, 61, 61, 32, 102, 105, 98, 95, 112, 97, 114, 97, 109, 115,
        46, 105, 102, 105, 110, 100, 101, 120, 41, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 114,
        101, 116, 117, 114, 110, 32, 98, 112, 102, 95, 114, 101, 100, 105, 114, 101, 99, 116, 40,
        102, 105, 98, 95, 112, 97, 114, 97, 109, 115, 46, 105, 102, 105, 110, 100, 101, 120, 44,
        32, 48, 41, 59, 0, 125, 0, 46, 114, 111, 100, 97, 116, 97, 0, 108, 105, 99, 101, 110, 115,
        101, 0, 120, 100, 112, 0, 0, 0, 0, 159, 235, 1, 0, 32, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0,
        20, 0, 0, 0, 12, 4, 0, 0, 32, 4, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 157, 5, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 7, 0, 0, 0, 16, 0, 0, 0, 157, 5, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 205, 0, 0, 0, 39,
        1, 0, 0, 0, 224, 0, 0, 16, 0, 0, 0, 205, 0, 0, 0, 76, 1, 0, 0, 42, 232, 0, 0, 24, 0, 0, 0,
        205, 0, 0, 0, 127, 1, 0, 0, 38, 236, 0, 0, 32, 0, 0, 0, 205, 0, 0, 0, 170, 1, 0, 0, 9, 12,
        1, 0, 48, 0, 0, 0, 205, 0, 0, 0, 170, 1, 0, 0, 9, 12, 1, 0, 56, 0, 0, 0, 205, 0, 0, 0, 211,
        1, 0, 0, 14, 28, 1, 0, 88, 0, 0, 0, 205, 0, 0, 0, 211, 1, 0, 0, 9, 28, 1, 0, 96, 0, 0, 0,
        205, 0, 0, 0, 2, 2, 0, 0, 23, 48, 1, 0, 112, 0, 0, 0, 205, 0, 0, 0, 2, 2, 0, 0, 9, 48, 1,
        0, 120, 0, 0, 0, 205, 0, 0, 0, 43, 2, 0, 0, 14, 64, 1, 0, 128, 0, 0, 0, 205, 0, 0, 0, 43,
        2, 0, 0, 9, 64, 1, 0, 136, 0, 0, 0, 205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
        205, 0, 0, 0, 84, 2, 0, 0, 34, 80, 1, 0, 160, 0, 0, 0, 205, 0, 0, 0, 84, 2, 0, 0, 38, 80,
        1, 0, 176, 0, 0, 0, 205, 0, 0, 0, 84, 2, 0, 0, 26, 80, 1, 0, 184, 0, 0, 0, 205, 0, 0, 0,
        128, 2, 0, 0, 25, 84, 1, 0, 192, 0, 0, 0, 205, 0, 0, 0, 128, 2, 0, 0, 9, 84, 1, 0, 208, 0,
        0, 0, 205, 0, 0, 0, 171, 2, 0, 0, 27, 100, 1, 0, 224, 0, 0, 0, 205, 0, 0, 0, 171, 2, 0, 0,
        40, 100, 1, 0, 232, 0, 0, 0, 205, 0, 0, 0, 171, 2, 0, 0, 27, 100, 1, 0, 32, 1, 0, 0, 205,
        0, 0, 0, 212, 2, 0, 0, 29, 112, 1, 0, 40, 1, 0, 0, 205, 0, 0, 0, 171, 2, 0, 0, 40, 100, 1,
        0, 48, 1, 0, 0, 205, 0, 0, 0, 250, 2, 0, 0, 20, 116, 1, 0, 64, 1, 0, 0, 205, 0, 0, 0, 250,
        2, 0, 0, 9, 116, 1, 0, 72, 1, 0, 0, 205, 0, 0, 0, 38, 3, 0, 0, 21, 108, 1, 0, 80, 1, 0, 0,
        205, 0, 0, 0, 38, 3, 0, 0, 9, 108, 1, 0, 88, 1, 0, 0, 205, 0, 0, 0, 63, 3, 0, 0, 21, 120,
        1, 0, 112, 1, 0, 0, 205, 0, 0, 0, 63, 3, 0, 0, 9, 120, 1, 0, 120, 1, 0, 0, 205, 0, 0, 0,
        97, 3, 0, 0, 21, 124, 1, 0, 144, 1, 0, 0, 205, 0, 0, 0, 97, 3, 0, 0, 9, 124, 1, 0, 160, 1,
        0, 0, 205, 0, 0, 0, 171, 2, 0, 0, 27, 100, 1, 0, 168, 1, 0, 0, 205, 0, 0, 0, 130, 3, 0, 0,
        10, 144, 1, 0, 224, 1, 0, 0, 205, 0, 0, 0, 196, 3, 0, 0, 9, 148, 1, 0, 232, 1, 0, 0, 205,
        0, 0, 0, 238, 3, 0, 0, 9, 152, 1, 0, 24, 2, 0, 0, 205, 0, 0, 0, 28, 4, 0, 0, 18, 168, 1, 0,
        48, 2, 0, 0, 205, 0, 0, 0, 28, 4, 0, 0, 16, 168, 1, 0, 56, 2, 0, 0, 205, 0, 0, 0, 59, 4, 0,
        0, 18, 172, 1, 0, 64, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 11, 192, 0, 0, 80, 2, 0, 0, 205,
        0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0, 88, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 11, 192, 0, 0,
        96, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0, 104, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0,
        0, 11, 192, 0, 0, 112, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0, 120, 2, 0, 0, 205,
        0, 0, 0, 89, 4, 0, 0, 11, 192, 0, 0, 128, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0,
        136, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 11, 192, 0, 0, 152, 2, 0, 0, 205, 0, 0, 0, 89, 4,
        0, 0, 8, 192, 0, 0, 160, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 11, 192, 0, 0, 168, 2, 0, 0,
        205, 0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0, 176, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 11, 192,
        0, 0, 192, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0, 200, 2, 0, 0, 205, 0, 0, 0,
        59, 4, 0, 0, 16, 172, 1, 0, 208, 2, 0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 11, 192, 0, 0, 216, 2,
        0, 0, 205, 0, 0, 0, 89, 4, 0, 0, 8, 192, 0, 0, 232, 2, 0, 0, 205, 0, 0, 0, 109, 4, 0, 0, 7,
        124, 0, 0, 128, 3, 0, 0, 205, 0, 0, 0, 127, 4, 0, 0, 9, 136, 0, 0, 136, 3, 0, 0, 205, 0, 0,
        0, 142, 4, 0, 0, 16, 200, 0, 0, 144, 3, 0, 0, 205, 0, 0, 0, 183, 4, 0, 0, 5, 180, 1, 0, 0,
        4, 0, 0, 205, 0, 0, 0, 237, 4, 0, 0, 5, 184, 1, 0, 104, 4, 0, 0, 205, 0, 0, 0, 33, 5, 0, 0,
        14, 192, 1, 0, 112, 4, 0, 0, 205, 0, 0, 0, 33, 5, 0, 0, 44, 192, 1, 0, 120, 4, 0, 0, 205,
        0, 0, 0, 33, 5, 0, 0, 9, 192, 1, 0, 128, 4, 0, 0, 205, 0, 0, 0, 87, 5, 0, 0, 16, 204, 1, 0,
        152, 4, 0, 0, 205, 0, 0, 0, 139, 5, 0, 0, 1, 220, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0,
        32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 104,
        1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0,
        0, 17, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 2, 0, 0,
        0, 0, 0, 0, 168, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        16, 7, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 43, 7, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 170, 0, 0, 0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 7, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3,
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 7, 0, 0, 0, 0, 0, 0, 109, 7, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 14, 0, 0, 0, 0, 0, 0, 64, 4,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
}
